™
nC:\Users\Ariel\Documentos\Repositorios\Pruebas_Software_p2p_buena\PruebaComjuntaP2\PruebaComjuntaP2\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder		 
.		 
Services		 
.		 
AddControllers		 
(		  
)		  !
;		! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
builder 
. 
Services 
. 
AddDbContext 
< 
AppDBContext *
>* +
(+ ,
options, 3
=>4 6
options 
. 
UseSqlServer 
( 
builder  
.  !
Configuration! .
.. /
GetConnectionString/ B
(B C
$strC V
)V W
)W X
)X Y
;Y Z
builder 
. 
Services 
. 
AddControllers 
(  
)  !
.! "
AddJsonOptions" 0
(0 1
options1 8
=>9 ;
{ 
options 
. !
JsonSerializerOptions !
.! "
ReferenceHandler" 2
=3 4
ReferenceHandler5 E
.E F
PreserveF N
;N O
options 
. !
JsonSerializerOptions !
.! "
WriteIndented" /
=0 1
true2 6
;6 7
} 
) 
; 
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
if 
( 
app 
. 
Environment 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
app 
. 

UseSwagger 
( 
) 
; 
app 
. 
UseSwaggerUI 
( 
) 
; 
} 
app!! 
.!! 
UseHttpsRedirection!! 
(!! 
)!! 
;!! 
app## 
.## 
UseAuthorization## 
(## 
)## 
;## 
app%% 
.%% 
MapControllers%% 
(%% 
)%% 
;%% 
await'' 
app'' 	
.''	 

RunAsync''
 
('' 
)'' 
;'' µ

tC:\Users\Ariel\Documentos\Repositorios\Pruebas_Software_p2p_buena\PruebaComjuntaP2\PruebaComjuntaP2\Dtos\VentaDto.cs
	namespace 	
GestionInventario
 
. 
Dtos  
{ 
public 

class 
VentaDto 
{ 
public 
int 
? 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
int 
? 

ProductoId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
? 
Cantidad 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 

FechaVenta #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public		 
decimal		 
?		 
Total		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public

 
int

 
?

 
	ClienteId

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
} 
} ¡

wC:\Users\Ariel\Documentos\Repositorios\Pruebas_Software_p2p_buena\PruebaComjuntaP2\PruebaComjuntaP2\Dtos\ProductoDto.cs
	namespace 	
GestionInventario
 
. 
Dtos  
{ 
public 

class 
ProductoDto 
{ 
public 
int 
? 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
? 
Nombre 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
Descripcion "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
decimal 
? 
Precio 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 
int		 
?		 
CantidadStock		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
public

 
int

 
?

 
CategoriaId

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
} 
} ç	
vC:\Users\Ariel\Documentos\Repositorios\Pruebas_Software_p2p_buena\PruebaComjuntaP2\PruebaComjuntaP2\Dtos\ClienteDto.cs
	namespace 	
GestionInventario
 
. 
Dtos  
{ 
public 

class 

ClienteDto 
{ 
public 
int 
? 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
? 
Nombre 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
Apellido 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Email 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
string		 
?		 
Telefono		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
}

 
} ¡
xC:\Users\Ariel\Documentos\Repositorios\Pruebas_Software_p2p_buena\PruebaComjuntaP2\PruebaComjuntaP2\Dtos\CategoriaDto.cs
	namespace 	
GestionInventario
 
. 
Dtos  
{ 
public 

class 
CategoriaDto 
{ 
public 
int 
? 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
? 
Nombre 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
Descripcion "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
}		 ﬂÅ
ÖC:\Users\Ariel\Documentos\Repositorios\Pruebas_Software_p2p_buena\PruebaComjuntaP2\PruebaComjuntaP2\Controllers\ProductoController.cs
	namespace 	
GestionInventario
 
. 
Controllers '
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
ProductosController $
:% &
ControllerBase' 5
{ 
private 
readonly 
AppDBContext %
_context& .
;. /
public 
ProductosController "
(" #
AppDBContext# /
context0 7
)7 8
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
ProductoDto3 >
>> ?
>? @
>@ A
GetProductosB N
(N O
)O P
{ 	
return 
await 
_context !
.! "
	Productos" +
. 
Select 
( 
p 
=> 
new  
ProductoDto! ,
{ 
Id 
= 
p 
. 
Id 
, 
Nombre 
= 
p 
. 
Nombre %
,% &
Descripcion 
=  !
p" #
.# $
Descripcion$ /
,/ 0
Precio 
= 
p 
. 
Precio %
,% &
CantidadStock !
=" #
p$ %
.% &
CantidadStock& 3
,3 4
CategoriaId   
=    !
p  " #
.  # $
CategoriaId  $ /
}!! 
)!! 
."" 
ToListAsync"" 
("" 
)"" 
;"" 
}## 	
[%% 	
HttpGet%%	 
(%% 
$str%% 
)%% 
]%% 
public&& 
async&& 
Task&& 
<&& 
ActionResult&& &
<&&& '
ProductoDto&&' 2
>&&2 3
>&&3 4
GetProducto&&5 @
(&&@ A
int&&A D
id&&E G
)&&G H
{'' 	
var(( 
producto(( 
=(( 
await((  
_context((! )
.(() *
	Productos((* 3
.)) 
Where)) 
()) 
p)) 
=>)) 
p)) 
.)) 
Id))  
==))! #
id))$ &
)))& '
.** 
Select** 
(** 
p** 
=>** 
new**  
ProductoDto**! ,
{++ 
Id,, 
=,, 
p,, 
.,, 
Id,, 
,,, 
Nombre-- 
=-- 
p-- 
.-- 
Nombre-- %
,--% &
Descripcion.. 
=..  !
p.." #
...# $
Descripcion..$ /
,../ 0
Precio// 
=// 
p// 
.// 
Precio// %
,//% &
CantidadStock00 !
=00" #
p00$ %
.00% &
CantidadStock00& 3
,003 4
CategoriaId11 
=11  !
p11" #
.11# $
CategoriaId11$ /
}22 
)22 
.33 
FirstOrDefaultAsync33 $
(33$ %
)33% &
;33& '
if55 
(55 
producto55 
==55 
null55  
)55  !
return55" (
NotFound55) 1
(551 2
)552 3
;553 4
return77 
producto77 
;77 
}88 	
[:: 	
HttpPost::	 
]:: 
public;; 
async;; 
Task;; 
<;; 
ActionResult;; &
<;;& '
ProductoDto;;' 2
>;;2 3
>;;3 4
PostProducto;;5 A
(;;A B
[;;B C
FromBody;;C K
];;K L
ProductoDto;;M X
productoDto;;Y d
);;d e
{<< 	
if== 
(== 
!== 

ModelState== 
.== 
IsValid== #
)==# $
{>> 
return?? 

BadRequest?? !
(??! "

ModelState??" ,
)??, -
;??- .
}@@ 
ifBB 
(BB 
productoDtoBB 
==BB 
nullBB #
||BB$ &
stringBB' -
.BB- .
IsNullOrEmptyBB. ;
(BB; <
productoDtoBB< G
.BBG H
NombreBBH N
)BBN O
||BBP R
stringBBS Y
.BBY Z
IsNullOrEmptyBBZ g
(BBg h
productoDtoBBh s
.BBs t
DescripcionBBt 
)	BB Ä
)
BBÄ Å
{CC 
returnDD 

BadRequestDD !
(DD! "
$strDD" V
)DDV W
;DDW X
}EE 
ifGG 
(GG 
productoDtoGG 
.GG 
PrecioGG "
<=GG# %
$numGG& '
)GG' (
{HH 
returnII 

BadRequestII !
(II! "
$strII" N
)IIN O
;IIO P
}JJ 
ifLL 
(LL 
productoDtoLL 
.LL 
CantidadStockLL )
<LL* +
$numLL, -
)LL- .
{MM 
returnNN 

BadRequestNN !
(NN! "
$strNN" a
)NNa b
;NNb c
}OO 
varQQ 
existingProductoQQ  
=QQ! "
awaitQQ# (
_contextQQ) 1
.QQ1 2
	ProductosQQ2 ;
.RR 
FirstOrDefaultAsyncRR $
(RR$ %
pRR% &
=>RR' )
pRR* +
.RR+ ,
NombreRR, 2
==RR3 5
productoDtoRR6 A
.RRA B
NombreRRB H
&&RRI K
pRRL M
.RRM N
DescripcionRRN Y
==RRZ \
productoDtoRR] h
.RRh i
DescripcionRRi t
&&RRu w
pRRx y
.RRy z
CategoriaId	RRz Ö
==
RRÜ à
productoDto
RRâ î
.
RRî ï
CategoriaId
RRï †
)
RR† °
;
RR° ¢
ifTT 
(TT 
existingProductoTT  
!=TT! #
nullTT$ (
)TT( )
{UU 
returnVV 
ConflictVV 
(VV  
$strVV  `
)VV` a
;VVa b
}WW 
varYY 
productoYY 
=YY 
newYY 
ProductoYY '
{ZZ 
Nombre[[ 
=[[ 
productoDto[[ $
.[[$ %
Nombre[[% +
,[[+ ,
Descripcion\\ 
=\\ 
productoDto\\ )
.\\) *
Descripcion\\* 5
,\\5 6
Precio]] 
=]] 
productoDto]] $
.]]$ %
Precio]]% +
??]], .
$num]]/ 0
,]]0 1
CantidadStock^^ 
=^^ 
productoDto^^  +
.^^+ ,
CantidadStock^^, 9
??^^: <
$num^^= >
,^^> ?
CategoriaId__ 
=__ 
productoDto__ )
.__) *
CategoriaId__* 5
??__6 8
$num__9 :
}`` 
;`` 
_contextbb 
.bb 
	Productosbb 
.bb 
Addbb "
(bb" #
productobb# +
)bb+ ,
;bb, -
awaitcc 
_contextcc 
.cc 
SaveChangesAsynccc +
(cc+ ,
)cc, -
;cc- .
productoDtoee 
.ee 
Idee 
=ee 
productoee %
.ee% &
Idee& (
;ee( )
returngg 
CreatedAtActiongg "
(gg" #
nameofgg# )
(gg) *
GetProductogg* 5
)gg5 6
,gg6 7
newgg8 ;
{gg< =
idgg> @
=ggA B
productoDtoggC N
.ggN O
IdggO Q
}ggR S
,ggS T
productoDtoggU `
)gg` a
;gga b
}hh 	
[jj 	
HttpPutjj	 
(jj 
$strjj 
)jj 
]jj 
publickk 
asynckk 
Taskkk 
<kk 
IActionResultkk '
>kk' (
PutProductokk) 4
(kk4 5
intkk5 8
idkk9 ;
,kk; <
[kk= >
FromBodykk> F
]kkF G
ProductoDtokkH S
productoDtokkT _
)kk_ `
{ll 	
ifmm 
(mm 
idmm 
!=mm 
productoDtomm !
.mm! "
Idmm" $
)mm$ %
{nn 
returnoo 

BadRequestoo !
(oo! "
$stroo" e
)ooe f
;oof g
}pp 
ifrr 
(rr 
!rr 

ModelStaterr 
.rr 
IsValidrr #
)rr# $
{ss 
returntt 

BadRequesttt !
(tt! "

ModelStatett" ,
)tt, -
;tt- .
}uu 
ifww 
(ww 
productoDtoww 
==ww 
nullww #
||ww$ &
stringww' -
.ww- .
IsNullOrEmptyww. ;
(ww; <
productoDtoww< G
.wwG H
NombrewwH N
)wwN O
||wwP R
stringwwS Y
.wwY Z
IsNullOrEmptywwZ g
(wwg h
productoDtowwh s
.wws t
Descripcionwwt 
)	ww Ä
)
wwÄ Å
{xx 
returnyy 

BadRequestyy !
(yy! "
$stryy" V
)yyV W
;yyW X
}zz 
if|| 
(|| 
productoDto|| 
.|| 
Precio|| "
<=||# %
$num||& '
)||' (
{}} 
return~~ 

BadRequest~~ !
(~~! "
$str~~" N
)~~N O
;~~O P
} 
if
ÅÅ 
(
ÅÅ 
productoDto
ÅÅ 
.
ÅÅ 
CantidadStock
ÅÅ )
<
ÅÅ* +
$num
ÅÅ, -
)
ÅÅ- .
{
ÇÇ 
return
ÉÉ 

BadRequest
ÉÉ !
(
ÉÉ! "
$str
ÉÉ" a
)
ÉÉa b
;
ÉÉb c
}
ÑÑ 
var
ÜÜ 
existingProducto
ÜÜ  
=
ÜÜ! "
await
ÜÜ# (
_context
ÜÜ) 1
.
ÜÜ1 2
	Productos
ÜÜ2 ;
.
áá !
FirstOrDefaultAsync
áá $
(
áá$ %
p
áá% &
=>
áá' )
p
áá* +
.
áá+ ,
Id
áá, .
!=
áá/ 1
id
áá2 4
&&
áá5 7
p
áá8 9
.
áá9 :
Nombre
áá: @
==
ááA C
productoDto
ááD O
.
ááO P
Nombre
ááP V
&&
ááW Y
p
ááZ [
.
áá[ \
Descripcion
áá\ g
==
ááh j
productoDto
áák v
.
ááv w
Descripcionááw Ç
&&ááÉ Ö
pááÜ á
.ááá à
CategoriaIdááà ì
==ááî ñ
productoDtoááó ¢
.áá¢ £
CategoriaIdáá£ Æ
)ááÆ Ø
;ááØ ∞
if
ââ 
(
ââ 
existingProducto
ââ  
!=
ââ! #
null
ââ$ (
)
ââ( )
{
ää 
return
ãã 
Conflict
ãã 
(
ãã  
$str
ãã  `
)
ãã` a
;
ããa b
}
åå 
var
éé 
producto
éé 
=
éé 
await
éé  
_context
éé! )
.
éé) *
	Productos
éé* 3
.
éé3 4
	FindAsync
éé4 =
(
éé= >
id
éé> @
)
éé@ A
;
ééA B
if
èè 
(
èè 
producto
èè 
==
èè 
null
èè  
)
èè  !
{
êê 
return
ëë 
NotFound
ëë 
(
ëë  
)
ëë  !
;
ëë! "
}
íí 
producto
îî 
.
îî 
Nombre
îî 
=
îî 
productoDto
îî )
.
îî) *
Nombre
îî* 0
;
îî0 1
producto
ïï 
.
ïï 
Descripcion
ïï  
=
ïï! "
productoDto
ïï# .
.
ïï. /
Descripcion
ïï/ :
;
ïï: ;
producto
ññ 
.
ññ 
Precio
ññ 
=
ññ 
productoDto
ññ )
.
ññ) *
Precio
ññ* 0
??
ññ1 3
$num
ññ4 5
;
ññ5 6
producto
óó 
.
óó 
CantidadStock
óó "
=
óó# $
productoDto
óó% 0
.
óó0 1
CantidadStock
óó1 >
??
óó? A
$num
óóB C
;
óóC D
producto
òò 
.
òò 
CategoriaId
òò  
=
òò! "
productoDto
òò# .
.
òò. /
CategoriaId
òò/ :
??
òò; =
$num
òò> ?
;
òò? @
_context
öö 
.
öö 
Entry
öö 
(
öö 
producto
öö #
)
öö# $
.
öö$ %
State
öö% *
=
öö+ ,
EntityState
öö- 8
.
öö8 9
Modified
öö9 A
;
ööA B
try
úú 
{
ùù 
await
ûû 
_context
ûû 
.
ûû 
SaveChangesAsync
ûû /
(
ûû/ 0
)
ûû0 1
;
ûû1 2
}
üü 
catch
†† 
(
†† *
DbUpdateConcurrencyException
†† /
)
††/ 0
{
°° 
if
¢¢ 
(
¢¢ 
!
¢¢ 
ProductoExists
¢¢ #
(
¢¢# $
id
¢¢$ &
)
¢¢& '
)
¢¢' (
{
££ 
return
§§ 
NotFound
§§ #
(
§§# $
)
§§$ %
;
§§% &
}
•• 
else
¶¶ 
{
ßß 
throw
®® 
;
®® 
}
©© 
}
™™ 
return
¨¨ 
	NoContent
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
}
≠≠ 	
[
ØØ 	

HttpDelete
ØØ	 
(
ØØ 
$str
ØØ 
)
ØØ 
]
ØØ 
public
∞∞ 
async
∞∞ 
Task
∞∞ 
<
∞∞ 
IActionResult
∞∞ '
>
∞∞' (
DeleteProducto
∞∞) 7
(
∞∞7 8
int
∞∞8 ;
id
∞∞< >
)
∞∞> ?
{
±± 	
var
≤≤ 
producto
≤≤ 
=
≤≤ 
await
≤≤  
_context
≤≤! )
.
≤≤) *
	Productos
≤≤* 3
.
≤≤3 4
	FindAsync
≤≤4 =
(
≤≤= >
id
≤≤> @
)
≤≤@ A
;
≤≤A B
if
≥≥ 
(
≥≥ 
producto
≥≥ 
==
≥≥ 
null
≥≥  
)
≥≥  !
return
≥≥" (
NotFound
≥≥) 1
(
≥≥1 2
)
≥≥2 3
;
≥≥3 4
var
µµ 
ventasAsociadas
µµ 
=
µµ  !
await
µµ" '
_context
µµ( 0
.
µµ0 1
Ventas
µµ1 7
.
µµ7 8
AnyAsync
µµ8 @
(
µµ@ A
v
µµA B
=>
µµC E
v
µµF G
.
µµG H

ProductoId
µµH R
==
µµS U
id
µµV X
)
µµX Y
;
µµY Z
if
∂∂ 
(
∂∂ 
ventasAsociadas
∂∂ 
)
∂∂  
{
∑∑ 
return
∏∏ 
Conflict
∏∏ 
(
∏∏  
$str
∏∏  d
)
∏∏d e
;
∏∏e f
}
ππ 
_context
ªª 
.
ªª 
	Productos
ªª 
.
ªª 
Remove
ªª %
(
ªª% &
producto
ªª& .
)
ªª. /
;
ªª/ 0
await
ºº 
_context
ºº 
.
ºº 
SaveChangesAsync
ºº +
(
ºº+ ,
)
ºº, -
;
ºº- .
return
ΩΩ 
	NoContent
ΩΩ 
(
ΩΩ 
)
ΩΩ 
;
ΩΩ 
}
ææ 	
private
¿¿ 
bool
¿¿ 
ProductoExists
¿¿ #
(
¿¿# $
int
¿¿$ '
id
¿¿( *
)
¿¿* +
{
¡¡ 	
return
¬¬ 
_context
¬¬ 
.
¬¬ 
	Productos
¬¬ %
.
¬¬% &
Any
¬¬& )
(
¬¬) *
e
¬¬* +
=>
¬¬, .
e
¬¬/ 0
.
¬¬0 1
Id
¬¬1 3
==
¬¬4 6
id
¬¬7 9
)
¬¬9 :
;
¬¬: ;
}
√√ 	
}
ƒƒ 
}≈≈ …[
ÑC:\Users\Ariel\Documentos\Repositorios\Pruebas_Software_p2p_buena\PruebaComjuntaP2\PruebaComjuntaP2\Controllers\ClienteController.cs
	namespace 	
GestionInventario
 
. 
Controllers '
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
ClientesController #
:$ %
ControllerBase& 4
{ 
private 
readonly 
AppDBContext %
_context& .
;. /
public 
ClientesController !
(! "
AppDBContext" .
context/ 6
)6 7
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3

ClienteDto3 =
>= >
>> ?
>? @
GetClientesA L
(L M
)M N
{ 	
return 
await 
_context !
.! "
Clientes" *
. 
Select 
( 
c 
=> 
new  

ClienteDto! +
{ 
Id 
= 
c 
. 
Id 
, 
Nombre 
= 
c 
. 
Nombre %
,% &
Apellido 
= 
c  
.  !
Apellido! )
,) *
Email 
= 
c 
. 
Email #
,# $
Telefono 
= 
c  
.  !
Telefono! )
}   
)   
.!! 
ToListAsync!! 
(!! 
)!! 
;!! 
}"" 	
[$$ 	
HttpGet$$	 
($$ 
$str$$ 
)$$ 
]$$ 
public%% 
async%% 
Task%% 
<%% 
ActionResult%% &
<%%& '

ClienteDto%%' 1
>%%1 2
>%%2 3

GetCliente%%4 >
(%%> ?
int%%? B
id%%C E
)%%E F
{&& 	
var'' 
cliente'' 
='' 
await'' 
_context''  (
.''( )
Clientes'') 1
.(( 
Where(( 
((( 
c(( 
=>(( 
c(( 
.(( 
Id((  
==((! #
id(($ &
)((& '
.)) 
Select)) 
()) 
c)) 
=>)) 
new))  

ClienteDto))! +
{** 
Id++ 
=++ 
c++ 
.++ 
Id++ 
,++ 
Nombre,, 
=,, 
c,, 
.,, 
Nombre,, %
,,,% &
Apellido-- 
=-- 
c--  
.--  !
Apellido--! )
,--) *
Email.. 
=.. 
c.. 
... 
Email.. #
,..# $
Telefono// 
=// 
c//  
.//  !
Telefono//! )
}00 
)00 
.11 
FirstOrDefaultAsync11 $
(11$ %
)11% &
;11& '
if33 
(33 
cliente33 
==33 
null33 
)33  
return33! '
NotFound33( 0
(330 1
)331 2
;332 3
return55 
cliente55 
;55 
}66 	
[88 	
HttpPost88	 
]88 
public99 
async99 
Task99 
<99 
ActionResult99 &
<99& '

ClienteDto99' 1
>991 2
>992 3
PostCliente994 ?
(99? @
[99@ A
FromBody99A I
]99I J

ClienteDto99K U

clienteDto99V `
)99` a
{:: 	
if;; 
(;; 
!;; 

ModelState;; 
.;; 
IsValid;; #
);;# $
{<< 
return== 

BadRequest== !
(==! "

ModelState==" ,
)==, -
;==- .
}>> 
var@@ 
existingCliente@@ 
=@@  !
await@@" '
_context@@( 0
.@@0 1
Clientes@@1 9
.AA 
FirstOrDefaultAsyncAA $
(AA$ %
cAA% &
=>AA' )
cAA* +
.AA+ ,
EmailAA, 1
==AA2 4

clienteDtoAA5 ?
.AA? @
EmailAA@ E
)AAE F
;AAF G
ifCC 
(CC 
existingClienteCC 
!=CC  "
nullCC# '
)CC' (
{DD 
returnEE 
ConflictEE 
(EE  
$strEE  R
)EER S
;EES T
}FF 
varHH 
clienteHH 
=HH 
newHH 
ClienteHH %
{II 
NombreJJ 
=JJ 

clienteDtoJJ #
.JJ# $
NombreJJ$ *
,JJ* +
ApellidoKK 
=KK 

clienteDtoKK %
.KK% &
ApellidoKK& .
,KK. /
EmailLL 
=LL 

clienteDtoLL "
.LL" #
EmailLL# (
,LL( )
TelefonoMM 
=MM 

clienteDtoMM %
.MM% &
TelefonoMM& .
}NN 
;NN 
_contextPP 
.PP 
ClientesPP 
.PP 
AddPP !
(PP! "
clientePP" )
)PP) *
;PP* +
awaitQQ 
_contextQQ 
.QQ 
SaveChangesAsyncQQ +
(QQ+ ,
)QQ, -
;QQ- .

clienteDtoSS 
.SS 
IdSS 
=SS 
clienteSS #
.SS# $
IdSS$ &
;SS& '
returnUU 
CreatedAtActionUU "
(UU" #
nameofUU# )
(UU) *

GetClienteUU* 4
)UU4 5
,UU5 6
newUU7 :
{UU; <
idUU= ?
=UU@ A

clienteDtoUUB L
.UUL M
IdUUM O
}UUP Q
,UUQ R

clienteDtoUUS ]
)UU] ^
;UU^ _
}VV 	
[XX 	
HttpPutXX	 
(XX 
$strXX 
)XX 
]XX 
publicYY 
asyncYY 
TaskYY 
<YY 
IActionResultYY '
>YY' (

PutClienteYY) 3
(YY3 4
intYY4 7
idYY8 :
,YY: ;
[YY< =
FromBodyYY= E
]YYE F

ClienteDtoYYG Q

clienteDtoYYR \
)YY\ ]
{ZZ 	
if[[ 
([[ 
id[[ 
!=[[ 

clienteDto[[  
.[[  !
Id[[! #
)[[# $
{\\ 
return]] 

BadRequest]] !
(]]! "
$str]]" e
)]]e f
;]]f g
}^^ 
if`` 
(`` 
!`` 

ModelState`` 
.`` 
IsValid`` #
)``# $
{aa 
returnbb 

BadRequestbb !
(bb! "

ModelStatebb" ,
)bb, -
;bb- .
}cc 
varee 
clienteee 
=ee 
awaitee 
_contextee  (
.ee( )
Clientesee) 1
.ee1 2
	FindAsyncee2 ;
(ee; <
idee< >
)ee> ?
;ee? @
ifff 
(ff 
clienteff 
==ff 
nullff 
)ff  
{gg 
returnhh 
NotFoundhh 
(hh  
)hh  !
;hh! "
}ii 
clientekk 
.kk 
Nombrekk 
=kk 

clienteDtokk '
.kk' (
Nombrekk( .
;kk. /
clientell 
.ll 
Apellidoll 
=ll 

clienteDtoll )
.ll) *
Apellidoll* 2
;ll2 3
clientemm 
.mm 
Emailmm 
=mm 

clienteDtomm &
.mm& '
Emailmm' ,
;mm, -
clientenn 
.nn 
Telefononn 
=nn 

clienteDtonn )
.nn) *
Telefononn* 2
;nn2 3
_contextpp 
.pp 
Entrypp 
(pp 
clientepp "
)pp" #
.pp# $
Statepp$ )
=pp* +
EntityStatepp, 7
.pp7 8
Modifiedpp8 @
;pp@ A
tryrr 
{ss 
awaittt 
_contexttt 
.tt 
SaveChangesAsynctt /
(tt/ 0
)tt0 1
;tt1 2
}uu 
catchvv 
(vv (
DbUpdateConcurrencyExceptionvv /
)vv/ 0
{ww 
ifxx 
(xx 
!xx 
ClienteExistsxx "
(xx" #
idxx# %
)xx% &
)xx& '
{yy 
returnzz 
NotFoundzz #
(zz# $
)zz$ %
;zz% &
}{{ 
else|| 
{}} 
throw~~ 
;~~ 
} 
}
ÄÄ 
return
ÇÇ 
	NoContent
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
[
ÖÖ 	

HttpDelete
ÖÖ	 
(
ÖÖ 
$str
ÖÖ 
)
ÖÖ 
]
ÖÖ 
public
ÜÜ 
async
ÜÜ 
Task
ÜÜ 
<
ÜÜ 
IActionResult
ÜÜ '
>
ÜÜ' (
DeleteCliente
ÜÜ) 6
(
ÜÜ6 7
int
ÜÜ7 :
id
ÜÜ; =
)
ÜÜ= >
{
áá 	
var
àà 
cliente
àà 
=
àà 
await
àà 
_context
àà  (
.
àà( )
Clientes
àà) 1
.
àà1 2
	FindAsync
àà2 ;
(
àà; <
id
àà< >
)
àà> ?
;
àà? @
if
ââ 
(
ââ 
cliente
ââ 
==
ââ 
null
ââ 
)
ââ  
return
ââ! '
NotFound
ââ( 0
(
ââ0 1
)
ââ1 2
;
ââ2 3
var
ãã 
ventasAsociadas
ãã 
=
ãã  !
await
ãã" '
_context
ãã( 0
.
ãã0 1
Ventas
ãã1 7
.
ãã7 8
AnyAsync
ãã8 @
(
ãã@ A
v
ããA B
=>
ããC E
v
ããF G
.
ããG H
	ClienteId
ããH Q
==
ããR T
id
ããU W
)
ããW X
;
ããX Y
if
åå 
(
åå 
ventasAsociadas
åå 
)
åå  
{
çç 
return
éé 
Conflict
éé 
(
éé  
$str
éé  c
)
ééc d
;
ééd e
}
èè 
_context
ëë 
.
ëë 
Clientes
ëë 
.
ëë 
Remove
ëë $
(
ëë$ %
cliente
ëë% ,
)
ëë, -
;
ëë- .
await
íí 
_context
íí 
.
íí 
SaveChangesAsync
íí +
(
íí+ ,
)
íí, -
;
íí- .
return
ìì 
	NoContent
ìì 
(
ìì 
)
ìì 
;
ìì 
}
îî 	
private
ññ 
bool
ññ 
ClienteExists
ññ "
(
ññ" #
int
ññ# &
id
ññ' )
)
ññ) *
{
óó 	
return
òò 
_context
òò 
.
òò 
Clientes
òò $
.
òò$ %
Any
òò% (
(
òò( )
e
òò) *
=>
òò+ -
e
òò. /
.
òò/ 0
Id
òò0 2
==
òò3 5
id
òò6 8
)
òò8 9
;
òò9 :
}
ôô 	
}
öö 
}õõ ´g
ÜC:\Users\Ariel\Documentos\Repositorios\Pruebas_Software_p2p_buena\PruebaComjuntaP2\PruebaComjuntaP2\Controllers\CategoriaController.cs
	namespace 	
GestionInventario
 
. 
Controllers '
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class  
CategoriasController %
:& '
ControllerBase( 6
{ 
private 
readonly 
AppDBContext %
_context& .
;. /
public  
CategoriasController #
(# $
AppDBContext$ 0
context1 8
)8 9
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
CategoriaDto3 ?
>? @
>@ A
>A B
GetCategoriasC P
(P Q
)Q R
{ 	
return 
await 
_context !
.! "

Categorias" ,
. 
Select 
( 
c 
=> 
new  
CategoriaDto! -
{ 
Id 
= 
c 
. 
Id 
, 
Nombre 
= 
c 
. 
Nombre %
,% &
Descripcion 
=  !
c" #
.# $
Descripcion$ /
} 
) 
. 
ToListAsync 
( 
) 
; 
}   	
["" 	
HttpGet""	 
("" 
$str"" 
)"" 
]"" 
public## 
async## 
Task## 
<## 
ActionResult## &
<##& '
CategoriaDto##' 3
>##3 4
>##4 5
GetCategoria##6 B
(##B C
int##C F
id##G I
)##I J
{$$ 	
var%% 
	categoria%% 
=%% 
await%% !
_context%%" *
.%%* +

Categorias%%+ 5
.&& 
Where&& 
(&& 
c&& 
=>&& 
c&& 
.&& 
Id&&  
==&&! #
id&&$ &
)&&& '
.'' 
Select'' 
('' 
c'' 
=>'' 
new''  
CategoriaDto''! -
{(( 
Id)) 
=)) 
c)) 
.)) 
Id)) 
,)) 
Nombre** 
=** 
c** 
.** 
Nombre** %
,**% &
Descripcion++ 
=++  !
c++" #
.++# $
Descripcion++$ /
},, 
),, 
.-- 
FirstOrDefaultAsync-- $
(--$ %
)--% &
;--& '
if// 
(// 
	categoria// 
==// 
null// !
)//! "
return//# )
NotFound//* 2
(//2 3
)//3 4
;//4 5
return11 
	categoria11 
;11 
}22 	
[44 	
HttpPost44	 
]44 
public55 
async55 
Task55 
<55 
ActionResult55 &
<55& '
CategoriaDto55' 3
>553 4
>554 5
PostCategoria556 C
(55C D
[55D E
FromBody55E M
]55M N
CategoriaDto55O [
categoriaDto55\ h
)55h i
{66 	
if77 
(77 
!77 

ModelState77 
.77 
IsValid77 #
)77# $
{88 
return99 

BadRequest99 !
(99! "

ModelState99" ,
)99, -
;99- .
}:: 
if<< 
(<< 
categoriaDto<< 
==<< 
null<<  $
||<<% '
string<<( .
.<<. /
IsNullOrEmpty<</ <
(<<< =
categoriaDto<<= I
.<<I J
Nombre<<J P
)<<P Q
||<<R T
string<<U [
.<<[ \
IsNullOrEmpty<<\ i
(<<i j
categoriaDto<<j v
.<<v w
Descripcion	<<w Ç
)
<<Ç É
)
<<É Ñ
{== 
return>> 

BadRequest>> !
(>>! "
$str>>" V
)>>V W
;>>W X
}?? 
varAA 
existingCategoriaAA !
=AA" #
awaitAA$ )
_contextAA* 2
.AA2 3

CategoriasAA3 =
.BB 
FirstOrDefaultAsyncBB $
(BB$ %
cBB% &
=>BB' )
cBB* +
.BB+ ,
NombreBB, 2
==BB3 5
categoriaDtoBB6 B
.BBB C
NombreBBC I
&&BBJ L
cBBM N
.BBN O
DescripcionBBO Z
==BB[ ]
categoriaDtoBB^ j
.BBj k
DescripcionBBk v
)BBv w
;BBw x
ifDD 
(DD 
existingCategoriaDD !
!=DD" $
nullDD% )
)DD) *
{EE 
returnFF 
ConflictFF 
(FF  
$strFF  W
)FFW X
;FFX Y
}GG 
varII 
	categoriaII 
=II 
newII 
	CategoriaII  )
{JJ 
NombreKK 
=KK 
categoriaDtoKK %
.KK% &
NombreKK& ,
,KK, -
DescripcionLL 
=LL 
categoriaDtoLL *
.LL* +
DescripcionLL+ 6
}MM 
;MM 
_contextOO 
.OO 

CategoriasOO 
.OO  
AddOO  #
(OO# $
	categoriaOO$ -
)OO- .
;OO. /
awaitPP 
_contextPP 
.PP 
SaveChangesAsyncPP +
(PP+ ,
)PP, -
;PP- .
categoriaDtoRR 
.RR 
IdRR 
=RR 
	categoriaRR '
.RR' (
IdRR( *
;RR* +
returnTT 
CreatedAtActionTT "
(TT" #
nameofTT# )
(TT) *
GetCategoriaTT* 6
)TT6 7
,TT7 8
newTT9 <
{TT= >
idTT? A
=TTB C
categoriaDtoTTD P
.TTP Q
IdTTQ S
}TTT U
,TTU V
categoriaDtoTTW c
)TTc d
;TTd e
}UU 	
[WW 	
HttpPutWW	 
(WW 
$strWW 
)WW 
]WW 
publicXX 
asyncXX 
TaskXX 
<XX 
IActionResultXX '
>XX' (
PutCategoriaXX) 5
(XX5 6
intXX6 9
idXX: <
,XX< =
[XX> ?
FromBodyXX? G
]XXG H
CategoriaDtoXXI U
categoriaDtoXXV b
)XXb c
{YY 	
ifZZ 
(ZZ 
idZZ 
!=ZZ 
categoriaDtoZZ "
.ZZ" #
IdZZ# %
)ZZ% &
{[[ 
return\\ 

BadRequest\\ !
(\\! "
$str\\" e
)\\e f
;\\f g
}]] 
if__ 
(__ 
!__ 

ModelState__ 
.__ 
IsValid__ #
)__# $
{`` 
returnaa 

BadRequestaa !
(aa! "

ModelStateaa" ,
)aa, -
;aa- .
}bb 
ifdd 
(dd 
categoriaDtodd 
==dd 
nulldd  $
||dd% '
stringdd( .
.dd. /
IsNullOrEmptydd/ <
(dd< =
categoriaDtodd= I
.ddI J
NombreddJ P
)ddP Q
||ddR T
stringddU [
.dd[ \
IsNullOrEmptydd\ i
(ddi j
categoriaDtoddj v
.ddv w
Descripcion	ddw Ç
)
ddÇ É
)
ddÉ Ñ
{ee 
returnff 

BadRequestff !
(ff! "
$strff" V
)ffV W
;ffW X
}gg 
varii 
existingCategoriaii !
=ii" #
awaitii$ )
_contextii* 2
.ii2 3

Categoriasii3 =
.jj 
FirstOrDefaultAsyncjj $
(jj$ %
cjj% &
=>jj' )
cjj* +
.jj+ ,
Idjj, .
!=jj/ 1
idjj2 4
&&jj5 7
cjj8 9
.jj9 :
Nombrejj: @
==jjA C
categoriaDtojjD P
.jjP Q
NombrejjQ W
&&jjX Z
cjj[ \
.jj\ ]
Descripcionjj] h
==jji k
categoriaDtojjl x
.jjx y
Descripcion	jjy Ñ
)
jjÑ Ö
;
jjÖ Ü
ifll 
(ll 
existingCategoriall !
!=ll" $
nullll% )
)ll) *
{mm 
returnnn 
Conflictnn 
(nn  
$strnn  W
)nnW X
;nnX Y
}oo 
varqq 
	categoriaqq 
=qq 
awaitqq !
_contextqq" *
.qq* +

Categoriasqq+ 5
.qq5 6
	FindAsyncqq6 ?
(qq? @
idqq@ B
)qqB C
;qqC D
ifrr 
(rr 
	categoriarr 
==rr 
nullrr !
)rr! "
{ss 
returntt 
NotFoundtt 
(tt  
)tt  !
;tt! "
}uu 
	categoriaww 
.ww 
Nombreww 
=ww 
categoriaDtoww +
.ww+ ,
Nombreww, 2
;ww2 3
	categoriaxx 
.xx 
Descripcionxx !
=xx" #
categoriaDtoxx$ 0
.xx0 1
Descripcionxx1 <
;xx< =
_contextzz 
.zz 
Entryzz 
(zz 
	categoriazz $
)zz$ %
.zz% &
Statezz& +
=zz, -
EntityStatezz. 9
.zz9 :
Modifiedzz: B
;zzB C
try|| 
{}} 
await~~ 
_context~~ 
.~~ 
SaveChangesAsync~~ /
(~~/ 0
)~~0 1
;~~1 2
} 
catch
ÄÄ 
(
ÄÄ *
DbUpdateConcurrencyException
ÄÄ /
)
ÄÄ/ 0
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
!
ÇÇ 
CategoriaExists
ÇÇ $
(
ÇÇ$ %
id
ÇÇ% '
)
ÇÇ' (
)
ÇÇ( )
{
ÉÉ 
return
ÑÑ 
NotFound
ÑÑ #
(
ÑÑ# $
)
ÑÑ$ %
;
ÑÑ% &
}
ÖÖ 
else
ÜÜ 
{
áá 
throw
àà 
;
àà 
}
ââ 
}
ää 
return
åå 
	NoContent
åå 
(
åå 
)
åå 
;
åå 
}
çç 	
[
èè 	

HttpDelete
èè	 
(
èè 
$str
èè 
)
èè 
]
èè 
public
êê 
async
êê 
Task
êê 
<
êê 
IActionResult
êê '
>
êê' (
DeleteCategoria
êê) 8
(
êê8 9
int
êê9 <
id
êê= ?
)
êê? @
{
ëë 	
var
íí 
	categoria
íí 
=
íí 
await
íí !
_context
íí" *
.
íí* +

Categorias
íí+ 5
.
íí5 6
	FindAsync
íí6 ?
(
íí? @
id
íí@ B
)
ííB C
;
ííC D
if
ìì 
(
ìì 
	categoria
ìì 
==
ìì 
null
ìì !
)
ìì! "
return
ìì# )
NotFound
ìì* 2
(
ìì2 3
)
ìì3 4
;
ìì4 5
var
ïï  
productosAsociados
ïï "
=
ïï# $
await
ïï% *
_context
ïï+ 3
.
ïï3 4
	Productos
ïï4 =
.
ïï= >
AnyAsync
ïï> F
(
ïïF G
p
ïïG H
=>
ïïI K
p
ïïL M
.
ïïM N
CategoriaId
ïïN Y
==
ïïZ \
id
ïï] _
)
ïï_ `
;
ïï` a
if
ññ 
(
ññ  
productosAsociados
ññ "
)
ññ" #
{
óó 
return
òò 
Conflict
òò 
(
òò  
$str
òò  e
)
òòe f
;
òòf g
}
ôô 
_context
õõ 
.
õõ 

Categorias
õõ 
.
õõ  
Remove
õõ  &
(
õõ& '
	categoria
õõ' 0
)
õõ0 1
;
õõ1 2
await
úú 
_context
úú 
.
úú 
SaveChangesAsync
úú +
(
úú+ ,
)
úú, -
;
úú- .
return
ùù 
	NoContent
ùù 
(
ùù 
)
ùù 
;
ùù 
}
ûû 	
private
†† 
bool
†† 
CategoriaExists
†† $
(
††$ %
int
††% (
id
††) +
)
††+ ,
{
°° 	
return
¢¢ 
_context
¢¢ 
.
¢¢ 

Categorias
¢¢ &
.
¢¢& '
Any
¢¢' *
(
¢¢* +
e
¢¢+ ,
=>
¢¢- /
e
¢¢0 1
.
¢¢1 2
Id
¢¢2 4
==
¢¢5 7
id
¢¢8 :
)
¢¢: ;
;
¢¢; <
}
££ 	
}
§§ 
}•• ˝d
ÇC:\Users\Ariel\Documentos\Repositorios\Pruebas_Software_p2p_buena\PruebaComjuntaP2\PruebaComjuntaP2\Controllers\VentaController.cs
	namespace 	
GestionInventario
 
. 
Controllers '
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
VentasController !
:" #
ControllerBase$ 2
{ 
private 
readonly 
AppDBContext %
_context& .
;. /
public 
VentasController 
(  
AppDBContext  ,
context- 4
)4 5
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
VentaDto3 ;
>; <
>< =
>= >
	GetVentas? H
(H I
)I J
{ 	
return 
await 
_context !
.! "
Ventas" (
. 
Select 
( 
v 
=> 
new  
VentaDto! )
{ 
Id 
= 
v 
. 
Id 
, 

ProductoId 
=  
v! "
." #

ProductoId# -
,- .
Cantidad 
= 
v  
.  !
Cantidad! )
,) *

FechaVenta 
=  
v! "
." #

FechaVenta# -
,- .
Total 
= 
v 
. 
Total #
,# $
	ClienteId   
=   
v    !
.  ! "
	ClienteId  " +
}!! 
)!! 
."" 
ToListAsync"" 
("" 
)"" 
;"" 
}## 	
[%% 	
HttpGet%%	 
(%% 
$str%% 
)%% 
]%% 
public&& 
async&& 
Task&& 
<&& 
ActionResult&& &
<&&& '
VentaDto&&' /
>&&/ 0
>&&0 1
GetVenta&&2 :
(&&: ;
int&&; >
id&&? A
)&&A B
{'' 	
var(( 
venta(( 
=(( 
await(( 
_context(( &
.((& '
Ventas((' -
.)) 
Where)) 
()) 
v)) 
=>)) 
v)) 
.)) 
Id))  
==))! #
id))$ &
)))& '
.** 
Select** 
(** 
v** 
=>** 
new**  
VentaDto**! )
{++ 
Id,, 
=,, 
v,, 
.,, 
Id,, 
,,, 

ProductoId-- 
=--  
v--! "
.--" #

ProductoId--# -
,--- .
Cantidad.. 
=.. 
v..  
...  !
Cantidad..! )
,..) *

FechaVenta// 
=//  
v//! "
.//" #

FechaVenta//# -
,//- .
Total00 
=00 
v00 
.00 
Total00 #
,00# $
	ClienteId11 
=11 
v11  !
.11! "
	ClienteId11" +
}22 
)22 
.33 
FirstOrDefaultAsync33 $
(33$ %
)33% &
;33& '
if55 
(55 
venta55 
==55 
null55 
)55 
return55 %
NotFound55& .
(55. /
)55/ 0
;550 1
return77 
venta77 
;77 
}88 	
[:: 	
HttpPost::	 
]:: 
public;; 
async;; 
Task;; 
<;; 
ActionResult;; &
<;;& '
VentaDto;;' /
>;;/ 0
>;;0 1
	PostVenta;;2 ;
(;;; <
[;;< =
FromBody;;= E
];;E F
VentaDto;;G O
ventaDto;;P X
);;X Y
{<< 	
if== 
(== 
!== 

ModelState== 
.== 
IsValid== #
)==# $
{>> 
return?? 

BadRequest?? !
(??! "

ModelState??" ,
)??, -
;??- .
}@@ 
varBB 
currentDateBB 
=BB 
DateTimeBB &
.BB& '
TodayBB' ,
;BB, -
ifCC 
(CC 
(CC 
ventaDtoCC 
.CC 

FechaVentaCC $
?CC$ %
.CC% &
DateCC& *
??CC+ -
DateTimeCC. 6
.CC6 7
UtcNowCC7 =
)CC= >
!=CC? A
currentDateCCB M
)CCM N
{DD 
returnEE 

BadRequestEE !
(EE! "
$strEE" Z
)EEZ [
;EE[ \
}FF 
varHH 
existingVentaHH 
=HH 
awaitHH  %
_contextHH& .
.HH. /
VentasHH/ 5
.II 
FirstOrDefaultAsyncII $
(II$ %
vII% &
=>II' )
vII* +
.II+ ,

ProductoIdII, 6
==II7 9
ventaDtoII: B
.IIB C

ProductoIdIIC M
&&IIN P
vIIQ R
.IIR S
CantidadIIS [
==II\ ^
ventaDtoII_ g
.IIg h
CantidadIIh p
&&IIq s
vIIt u
.IIu v

FechaVenta	IIv Ä
==
IIÅ É
ventaDto
IIÑ å
.
IIå ç

FechaVenta
IIç ó
)
IIó ò
;
IIò ô
ifKK 
(KK 
existingVentaKK 
!=KK  
nullKK! %
)KK% &
{LL 
returnMM 
ConflictMM 
(MM  
$strMM  c
)MMc d
;MMd e
}NN 
varPP 
ventaPP 
=PP 
newPP 
VentaPP !
{QQ 

ProductoIdRR 
=RR 
ventaDtoRR %
.RR% &

ProductoIdRR& 0
??RR1 3
$numRR4 5
,RR5 6
CantidadSS 
=SS 
ventaDtoSS #
.SS# $
CantidadSS$ ,
??SS- /
$numSS0 1
,SS1 2

FechaVentaTT 
=TT 
ventaDtoTT %
.TT% &

FechaVentaTT& 0
??TT1 3
DateTimeTT4 <
.TT< =
UtcNowTT= C
.TTC D
DateTTD H
,TTH I
TotalUU 
=UU 
ventaDtoUU  
.UU  !
TotalUU! &
??UU' )
$numUU* +
,UU+ ,
	ClienteIdVV 
=VV 
ventaDtoVV $
.VV$ %
	ClienteIdVV% .
??VV/ 1
$numVV2 3
}WW 
;WW 
_contextYY 
.YY 
VentasYY 
.YY 
AddYY 
(YY  
ventaYY  %
)YY% &
;YY& '
awaitZZ 
_contextZZ 
.ZZ 
SaveChangesAsyncZZ +
(ZZ+ ,
)ZZ, -
;ZZ- .
ventaDto\\ 
.\\ 
Id\\ 
=\\ 
venta\\ 
.\\  
Id\\  "
;\\" #
return^^ 
CreatedAtAction^^ "
(^^" #
nameof^^# )
(^^) *
GetVenta^^* 2
)^^2 3
,^^3 4
new^^5 8
{^^9 :
id^^; =
=^^> ?
ventaDto^^@ H
.^^H I
Id^^I K
}^^L M
,^^M N
ventaDto^^O W
)^^W X
;^^X Y
}__ 	
[aa 	
HttpPutaa	 
(aa 
$straa 
)aa 
]aa 
publicbb 
asyncbb 
Taskbb 
<bb 
IActionResultbb '
>bb' (
PutVentabb) 1
(bb1 2
intbb2 5
idbb6 8
,bb8 9
[bb: ;
FromBodybb; C
]bbC D
VentaDtobbE M
ventaDtobbN V
)bbV W
{cc 	
ifdd 
(dd 
iddd 
!=dd 
ventaDtodd 
.dd 
Iddd !
)dd! "
{ee 
returnff 

BadRequestff !
(ff! "
$strff" e
)ffe f
;fff g
}gg 
ifii 
(ii 
!ii 

ModelStateii 
.ii 
IsValidii #
)ii# $
{jj 
returnkk 

BadRequestkk !
(kk! "

ModelStatekk" ,
)kk, -
;kk- .
}ll 
varnn 
ventann 
=nn 
awaitnn 
_contextnn &
.nn& '
Ventasnn' -
.nn- .
	FindAsyncnn. 7
(nn7 8
idnn8 :
)nn: ;
;nn; <
ifoo 
(oo 
ventaoo 
==oo 
nulloo 
)oo 
{pp 
returnqq 
NotFoundqq 
(qq  
)qq  !
;qq! "
}rr 
ventatt 
.tt 

ProductoIdtt 
=tt 
ventaDtott '
.tt' (

ProductoIdtt( 2
??tt3 5
$numtt6 7
;tt7 8
ventauu 
.uu 
Cantidaduu 
=uu 
ventaDtouu %
.uu% &
Cantidaduu& .
??uu/ 1
$numuu2 3
;uu3 4
ventavv 
.vv 

FechaVentavv 
=vv 
ventaDtovv '
.vv' (

FechaVentavv( 2
??vv3 5
DateTimevv6 >
.vv> ?
UtcNowvv? E
.vvE F
DatevvF J
;vvJ K
ventaww 
.ww 
Totalww 
=ww 
ventaDtoww "
.ww" #
Totalww# (
??ww) +
$numww, -
;ww- .
ventaxx 
.xx 
	ClienteIdxx 
=xx 
ventaDtoxx &
.xx& '
	ClienteIdxx' 0
??xx1 3
$numxx4 5
;xx5 6
_contextzz 
.zz 
Entryzz 
(zz 
ventazz  
)zz  !
.zz! "
Statezz" '
=zz( )
EntityStatezz* 5
.zz5 6
Modifiedzz6 >
;zz> ?
try|| 
{}} 
await~~ 
_context~~ 
.~~ 
SaveChangesAsync~~ /
(~~/ 0
)~~0 1
;~~1 2
} 
catch
ÄÄ 
(
ÄÄ *
DbUpdateConcurrencyException
ÄÄ /
)
ÄÄ/ 0
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
!
ÇÇ 
VentaExists
ÇÇ  
(
ÇÇ  !
id
ÇÇ! #
)
ÇÇ# $
)
ÇÇ$ %
{
ÉÉ 
return
ÑÑ 
NotFound
ÑÑ #
(
ÑÑ# $
)
ÑÑ$ %
;
ÑÑ% &
}
ÖÖ 
else
ÜÜ 
{
áá 
throw
àà 
;
àà 
}
ââ 
}
ää 
return
åå 
	NoContent
åå 
(
åå 
)
åå 
;
åå 
}
çç 	
private
èè 
bool
èè 
VentaExists
èè  
(
èè  !
int
èè! $
id
èè% '
)
èè' (
{
êê 	
return
ëë 
_context
ëë 
.
ëë 
Ventas
ëë "
.
ëë" #
Any
ëë# &
(
ëë& '
e
ëë' (
=>
ëë) +
e
ëë, -
.
ëë- .
Id
ëë. 0
==
ëë1 3
id
ëë4 6
)
ëë6 7
;
ëë7 8
}
íí 	
[
îî 	

HttpDelete
îî	 
(
îî 
$str
îî 
)
îî 
]
îî 
public
ïï 
async
ïï 
Task
ïï 
<
ïï 
IActionResult
ïï '
>
ïï' (
DeleteVenta
ïï) 4
(
ïï4 5
int
ïï5 8
id
ïï9 ;
)
ïï; <
{
ññ 	
var
óó 
venta
óó 
=
óó 
await
óó 
_context
óó &
.
óó& '
Ventas
óó' -
.
óó- .
	FindAsync
óó. 7
(
óó7 8
id
óó8 :
)
óó: ;
;
óó; <
if
òò 
(
òò 
venta
òò 
==
òò 
null
òò 
)
òò 
return
òò %
NotFound
òò& .
(
òò. /
)
òò/ 0
;
òò0 1
_context
ôô 
.
ôô 
Ventas
ôô 
.
ôô 
Remove
ôô "
(
ôô" #
venta
ôô# (
)
ôô( )
;
ôô) *
await
öö 
_context
öö 
.
öö 
SaveChangesAsync
öö +
(
öö+ ,
)
öö, -
;
öö- .
return
õõ 
	NoContent
õõ 
(
õõ 
)
õõ 
;
õõ 
}
úú 	
}
ùù 
}ûû «t
sC:\Users\Ariel\Documentos\Repositorios\Pruebas_Software_p2p_buena\PruebaComjuntaP2\PruebaComjuntaP2\AppDBContext.cs
	namespace 	
GestionInventario
 
{ 
public		 

class		 
AppDBContext		 
:		 
	DbContext		  )
{

 
public 
AppDBContext 
( 
DbContextOptions ,
<, -
AppDBContext- 9
>9 :
options; B
)B C
:D E
baseF J
(J K
optionsK R
)R S
{ 	
} 	
public 
DbSet 
< 
Producto 
> 
	Productos (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
DbSet 
< 
	Categoria 
> 

Categorias  *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
DbSet 
< 
Venta 
> 
Ventas "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DbSet 
< 
Cliente 
> 
Clientes &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
base 
. 
OnModelCreating  
(  !
modelBuilder! -
)- .
;. /
modelBuilder 
. 
Entity 
<  
Producto  (
>( )
() *
)* +
. 
HasKey 
( 
p 
=> 
p 
. 
Id !
)! "
;" #
modelBuilder 
. 
Entity 
<  
Producto  (
>( )
() *
)* +
. 
Property 
( 
p 
=> 
p  
.  !
Nombre! '
)' (
. 

IsRequired 
( 
) 
. 
HasMaxLength 
( 
$num !
)! "
;" #
modelBuilder!! 
.!! 
Entity!! 
<!!  
Producto!!  (
>!!( )
(!!) *
)!!* +
."" 
Property"" 
("" 
p"" 
=>"" 
p""  
.""  !
Descripcion""! ,
)"", -
.## 
HasMaxLength## 
(## 
$num## !
)##! "
;##" #
modelBuilder%% 
.%% 
Entity%% 
<%%  
Producto%%  (
>%%( )
(%%) *
)%%* +
.&& 
Property&& 
(&& 
p&& 
=>&& 
p&&  
.&&  !
Precio&&! '
)&&' (
.'' 
HasColumnType'' 
('' 
$str'' .
)''. /
;''/ 0
modelBuilder)) 
.)) 
Entity)) 
<))  
Producto))  (
>))( )
())) *
)))* +
.** 
HasOne** 
(** 
p** 
=>** 
p** 
.** 
	Categoria** (
)**( )
.++ 
WithMany++ 
(++ 
c++ 
=>++ 
c++  
.++  !
	Productos++! *
)++* +
.,, 
HasForeignKey,, 
(,, 
p,,  
=>,,! #
p,,$ %
.,,% &
CategoriaId,,& 1
),,1 2
;,,2 3
modelBuilder// 
.// 
Entity// 
<//  
	Categoria//  )
>//) *
(//* +
)//+ ,
.00 
HasKey00 
(00 
c00 
=>00 
c00 
.00 
Id00 !
)00! "
;00" #
modelBuilder22 
.22 
Entity22 
<22  
	Categoria22  )
>22) *
(22* +
)22+ ,
.33 
Property33 
(33 
c33 
=>33 
c33  
.33  !
Nombre33! '
)33' (
.44 

IsRequired44 
(44 
)44 
.55 
HasMaxLength55 
(55 
$num55 !
)55! "
;55" #
modelBuilder77 
.77 
Entity77 
<77  
	Categoria77  )
>77) *
(77* +
)77+ ,
.88 
Property88 
(88 
c88 
=>88 
c88  
.88  !
Descripcion88! ,
)88, -
.99 
HasMaxLength99 
(99 
$num99 !
)99! "
;99" #
modelBuilder<< 
.<< 
Entity<< 
<<<  
Venta<<  %
><<% &
(<<& '
)<<' (
.== 
HasKey== 
(== 
v== 
=>== 
v== 
.== 
Id== !
)==! "
;==" #
modelBuilder?? 
.?? 
Entity?? 
<??  
Venta??  %
>??% &
(??& '
)??' (
.@@ 
Property@@ 
(@@ 
v@@ 
=>@@ 
v@@  
.@@  !

FechaVenta@@! +
)@@+ ,
.AA 

IsRequiredAA 
(AA 
)AA 
;AA 
modelBuilderCC 
.CC 
EntityCC 
<CC  
VentaCC  %
>CC% &
(CC& '
)CC' (
.DD 
PropertyDD 
(DD 
vDD 
=>DD 
vDD  
.DD  !
TotalDD! &
)DD& '
.EE 
HasColumnTypeEE 
(EE 
$strEE .
)EE. /
;EE/ 0
modelBuilderGG 
.GG 
EntityGG 
<GG  
VentaGG  %
>GG% &
(GG& '
)GG' (
.HH 
HasOneHH 
(HH 
vHH 
=>HH 
vHH 
.HH 
ProductoHH '
)HH' (
.II 
WithManyII 
(II 
)II 
.JJ 
HasForeignKeyJJ 
(JJ 
vJJ  
=>JJ! #
vJJ$ %
.JJ% &

ProductoIdJJ& 0
)JJ0 1
;JJ1 2
modelBuilderLL 
.LL 
EntityLL 
<LL  
VentaLL  %
>LL% &
(LL& '
)LL' (
.MM 
HasOneMM 
(MM 
vMM 
=>MM 
vMM 
.MM 
ClienteMM &
)MM& '
.NN 
WithManyNN 
(NN 
)NN 
.OO 
HasForeignKeyOO 
(OO 
vOO  
=>OO! #
vOO$ %
.OO% &
	ClienteIdOO& /
)OO/ 0
;OO0 1
modelBuilderRR 
.RR 
EntityRR 
<RR  
ClienteRR  '
>RR' (
(RR( )
)RR) *
.SS 
HasKeySS 
(SS 
cSS 
=>SS 
cSS 
.SS 
IdSS !
)SS! "
;SS" #
modelBuilderUU 
.UU 
EntityUU 
<UU  
ClienteUU  '
>UU' (
(UU( )
)UU) *
.VV 
PropertyVV 
(VV 
cVV 
=>VV 
cVV  
.VV  !
NombreVV! '
)VV' (
.WW 

IsRequiredWW 
(WW 
)WW 
.XX 
HasMaxLengthXX 
(XX 
$numXX !
)XX! "
;XX" #
modelBuilderZZ 
.ZZ 
EntityZZ 
<ZZ  
ClienteZZ  '
>ZZ' (
(ZZ( )
)ZZ) *
.[[ 
Property[[ 
([[ 
c[[ 
=>[[ 
c[[  
.[[  !
Apellido[[! )
)[[) *
.\\ 

IsRequired\\ 
(\\ 
)\\ 
.]] 
HasMaxLength]] 
(]] 
$num]] !
)]]! "
;]]" #
modelBuilder__ 
.__ 
Entity__ 
<__  
Cliente__  '
>__' (
(__( )
)__) *
.`` 
Property`` 
(`` 
c`` 
=>`` 
c``  
.``  !
Email``! &
)``& '
.aa 

IsRequiredaa 
(aa 
)aa 
;aa 
modelBuildercc 
.cc 
Entitycc 
<cc  
Clientecc  '
>cc' (
(cc( )
)cc) *
.dd 
Propertydd 
(dd 
cdd 
=>dd 
cdd  
.dd  !
Telefonodd! )
)dd) *
.ee 
HasMaxLengthee 
(ee 
$numee  
)ee  !
;ee! "
}ff 	
}gg 
publicii 

classii 
Productoii 
{jj 
[kk 	
Keykk	 
]kk 
publicll 
intll 
Idll 
{ll 
getll 
;ll 
setll  
;ll  !
}ll" #
[mm 	
Requiredmm	 
]mm 
publicnn 
stringnn 
?nn 
Nombrenn 
{nn 
getnn  #
;nn# $
setnn% (
;nn( )
}nn* +
[oo 	
Requiredoo	 
]oo 
publicpp 
stringpp 
?pp 
Descripcionpp "
{pp# $
getpp% (
;pp( )
setpp* -
;pp- .
}pp/ 0
[qq 	
Requiredqq	 
]qq 
publicrr 
decimalrr 
Preciorr 
{rr 
getrr  #
;rr# $
setrr% (
;rr( )
}rr* +
publicss 
intss 
CantidadStockss  
{ss! "
getss# &
;ss& '
setss( +
;ss+ ,
}ss- .
publictt 
inttt 
CategoriaIdtt 
{tt  
gettt! $
;tt$ %
settt& )
;tt) *
}tt+ ,
publicuu 
	Categoriauu 
?uu 
	Categoriauu #
{uu$ %
getuu& )
;uu) *
setuu+ .
;uu. /
}uu0 1
}vv 
publicxx 

classxx 
	Categoriaxx 
{yy 
[zz 	
Keyzz	 
]zz 
public{{ 
int{{ 
Id{{ 
{{{ 
get{{ 
;{{ 
set{{  
;{{  !
}{{" #
[|| 	
Required||	 
]|| 
public}} 
string}} 
?}} 
Nombre}} 
{}} 
get}}  #
;}}# $
set}}% (
;}}( )
}}}* +
public~~ 
string~~ 
?~~ 
Descripcion~~ "
{~~# $
get~~% (
;~~( )
set~~* -
;~~- .
}~~/ 0
[ 	
Required	 
] 
public
ÄÄ 
ICollection
ÄÄ 
<
ÄÄ 
Producto
ÄÄ #
>
ÄÄ# $
	Productos
ÄÄ% .
{
ÄÄ/ 0
get
ÄÄ1 4
;
ÄÄ4 5
set
ÄÄ6 9
;
ÄÄ9 :
}
ÄÄ; <
=
ÄÄ= >
new
ÄÄ? B
List
ÄÄC G
<
ÄÄG H
Producto
ÄÄH P
>
ÄÄP Q
(
ÄÄQ R
)
ÄÄR S
;
ÄÄS T
}
ÅÅ 
public
ÉÉ 

class
ÉÉ 
Venta
ÉÉ 
{
ÑÑ 
[
ÖÖ 	
Key
ÖÖ	 
]
ÖÖ 
public
ÜÜ 
int
ÜÜ 
Id
ÜÜ 
{
ÜÜ 
get
ÜÜ 
;
ÜÜ 
set
ÜÜ  
;
ÜÜ  !
}
ÜÜ" #
[
áá 	
Required
áá	 
]
áá 
public
àà 
int
àà 

ProductoId
àà 
{
àà 
get
àà  #
;
àà# $
set
àà% (
;
àà( )
}
àà* +
public
ââ 
Producto
ââ 
?
ââ 
Producto
ââ !
{
ââ" #
get
ââ$ '
;
ââ' (
set
ââ) ,
;
ââ, -
}
ââ. /
[
ää 	
Required
ää	 
]
ää 
public
ãã 
int
ãã 
Cantidad
ãã 
{
ãã 
get
ãã !
;
ãã! "
set
ãã# &
;
ãã& '
}
ãã( )
[
åå 	
Required
åå	 
]
åå 
public
çç 
DateTime
çç 

FechaVenta
çç "
{
çç# $
get
çç% (
;
çç( )
set
çç* -
;
çç- .
}
çç/ 0
[
éé 	
Required
éé	 
]
éé 
public
èè 
decimal
èè 
Total
èè 
{
èè 
get
èè "
;
èè" #
set
èè$ '
;
èè' (
}
èè) *
[
êê 	
Required
êê	 
]
êê 
public
ëë 
int
ëë 
	ClienteId
ëë 
{
ëë 
get
ëë "
;
ëë" #
set
ëë$ '
;
ëë' (
}
ëë) *
public
íí 
Cliente
íí 
?
íí 
Cliente
íí 
{
íí  !
get
íí" %
;
íí% &
set
íí' *
;
íí* +
}
íí, -
}
ìì 
public
ïï 

class
ïï 
Cliente
ïï 
{
ññ 
[
óó 	
Key
óó	 
]
óó 
public
òò 
int
òò 
Id
òò 
{
òò 
get
òò 
;
òò 
set
òò  
;
òò  !
}
òò" #
[
ôô 	
Required
ôô	 
]
ôô 
public
öö 
string
öö 
?
öö 
Nombre
öö 
{
öö 
get
öö  #
;
öö# $
set
öö% (
;
öö( )
}
öö* +
[
õõ 	
Required
õõ	 
]
õõ 
public
úú 
string
úú 
?
úú 
Apellido
úú 
{
úú  !
get
úú" %
;
úú% &
set
úú' *
;
úú* +
}
úú, -
[
ùù 	
Required
ùù	 
]
ùù 
public
ûû 
string
ûû 
?
ûû 
Email
ûû 
{
ûû 
get
ûû "
;
ûû" #
set
ûû$ '
;
ûû' (
}
ûû) *
public
üü 
string
üü 
?
üü 
Telefono
üü 
{
üü  !
get
üü" %
;
üü% &
set
üü' *
;
üü* +
}
üü, -
}
†† 
}°° 